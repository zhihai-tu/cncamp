apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: httpserver
  name: httpserver
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: httpserver
  # 支持滚动升级    
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
      creationTimestamp: null
      labels:
        app: httpserver
    spec:
      containers:
      - image: tuzhihai1986/httpserver:v3.0.1
        imagePullPolicy: IfNotPresent
        name: httpserver
        # 优雅启动、探活
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        # 优雅终止
        lifecycle:
          preStop:
             exec:
              command:
              - sleep
              - 5s
        # 资源需求和 QoS 保证
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 20m
            memory: 20Mi
        # 配置和代码分离
        env:
        - name: HTTP_PORT
          valueFrom:
            configMapKeyRef:
              key: httpport
              name: myenv1
        # 日志级别
        volumeMounts:
        - name: http-config
          mountPath: "/config"
          readOnly: true
      volumes:
      - name: http-config
        configMap:
          name: myenv
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: cloudnative
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
